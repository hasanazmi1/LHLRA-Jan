@model LHRLA.DAL.tbl_Case_Types
@{
    ViewBag.Title = "Update Case";
    var lstCaseFields = ViewBag.CaseFields as List<LHRLA.Core.ViewModel.CaseFieldsVM>;
    var CaseDynamicData= ViewBag.CaseDynamicData as List<LHRLA.Core.ViewModel.CaseDataVM>;
    var SectionCount = lstCaseFields.GroupBy(e => e.Case_Field_Section_ID).ToList().Count;
    var FieldOptions = ViewBag.FieldOptions as List<LHRLA.DAL.tbl_Case_Fields_Options>;
    var RegisterationType = ViewBag.RegisterationType as List<LHRLA.DAL.tbl_Case_Registeration_Types>;
    var Tags = ViewBag.Tags as List<LHRLA.DAL.tbl_Tags_Setup>;
    var SubTypes = ViewBag.SubTypes as List<LHRLA.DAL.tbl_Case_Sub_Types>;
    var caseTypes = ViewBag.caseTypes as List<LHRLA.DAL.tbl_Case_Types>;
    var CaseStaticData = ViewBag.case_static_details as LHRLA.Core.ViewModel.CaseVM;
    var CaseReferrals= ViewBag.CaseReferrals as List<LHRLA.DAL.tbl_Case_Referral>;
    var CaseTags = ViewBag.CaseTags as List<LHRLA.DAL.tbl_Case_Tags>;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section pagelevelcss{
    <style>
        input.invalid, textarea.invalid, select.invalid {
            background-color: #ffdddd;
        }

        label.invalid {
            color: red;
        }
    </style>
}
@section actionsMain{
    <a href="list" class="btn btn-success m-btn m-btn--icon m-btn--wide">
        <span>
            <i class="la la-th-list"></i>
            <span>
                Show List
            </span>
        </span>
    </a>
}

@section scripts{
    <script src="~/assets/js/bootstrap-datepicker.js" type="text/javascript"></script>
    
    <script type="text/javascript">
        $(document).ready(function () {
            $('.m-select2').select2({
                placeholder: "Select an option",
                minimumResultsForSearch: 1 / 0
            });
            var ApprovalLevel = '@CaseStaticData.Approval_Level';
            if (ApprovalLevel != '0') {
                document.getElementById("btnSave").disabled = true;
            }

            var val1 = '@CaseStaticData.Case_Type_Id';
            $('#cmbCaseType').val(val1);

            $(function () {
                debugger             
                $("form[name='FormUpdate']").validate({
                    rules: {
                        CaseDate: {
                            required: true
                       
                        },
                        Summary: {
                            required: true
                            
                        },
                        Description: {
                            required: true
                        },
                //        RegsType: {
                //    required: true,
                //    valueNotEquals:""
                //},
                //ID: {
                //    required: true,
                //    valueNotEquals:""
                //}
                    },
                    messages: {
                        CaseDate: "*",
                        Summary: "*",
                        Description: "*",
                        //RegsType: { required: "*" },
                        //ID: { required: "*" }
                    },
                    errorClass: "invalid",
                    submitHandler: function (form) {
                        form.submit();
                    }
                });
            });

        });
    </script>

    <!--Cascading Dropdown-->

<script type="text/javascript">

        $(document).ready(function () {
          
            debugger
            var ID = $('#SubTypeID').val();

            $("#cmbSubCategory").change(function () {
                if (ID == "0") {
                    $('#cmbCaseType').empty();
                    //  $("#CaseType").val('0');
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCase", "Case")',
                        dataType: 'json',
                        data: { id: $("#cmbSubCategory").val() },
                        success: function (mems) {
                            // states contains the JSON formatted list
                            // of states passed from the controller
                            $.each(mems, function (i, member) {
                                $("#cmbCaseType").append('<option value="'
        + member.Value + '">'
        + member.Text + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                    return false;
                }
                else {
                    debugger
                    $('#cmbCaseType').empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCase", "Case")',
                        dataType: 'json',
                        data: {
                            id: $("#cmbSubCategory").val(),

                        },
                        success: function (mems) {
                            // states contains the JSON formatted list
                            // of states passed from the controller
                            $("#cmbCaseType").append('<option value="'
                + "0" + '">'
              + 'Select Case Type' + '</option>');

                            $.each(mems, function (i, member) {

                                $("#cmbCaseType").append('<option value="'
                       + member.Value + '">'
                     + member.Text + '</option>');

                            });
                            if (ID != "0" && ID != "") {
                                debugger;
                                var id = $("#CaseSubTypeHdn").val();
                                $("#cmbCaseType").val(id);
                            }

                        },

                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                    // debugger;

                    //   return false;

                }
            })
        });
</script>

    <!--------->

     <!--submission-->

    <script type="text/javascript">
        $(function () {

            //case sub category dropdown change event


            $('#btnSave').on('click', function (e) {
                e.preventDefault();
                var caseId= @CaseStaticData.ID;
                var casedate = $('#m_datepicker_2').val();
                var Summary = $('#txtSummary').val();
                var Description = $('#txtDescription').val();
                var CaseType = $('#cmbCaseType').val();
                var Case = $('#cmbCase').val();
                var RegType = $('#cmbRegType').val();
                var RefAgency = $('#cmbRefAgency').val();
                var Tags = $('#cmbTags').val();
                var followupdate = $('#m_datepicker_1').val();
                
                
                if ($("#FormUpdate").valid()) {
                   
                    var url = '@Url.Action("UpdateCaseData", "Case")';
                    var lstData = [];
                    //dynamic data
                    //text type values
                    $('input[name=DynamicField]').map(function () {
                        var data = {};
                        data.Case_ID = 1;
                        data.Case_Field_ID = parseInt($(this).attr('data-attr-id'));
                        data.Field_Value = $(this).val();
                        data.Description = '';
                        if ($(this).val() != '') {
                            lstData.push(data);
                        }
                    });
                    //option type values
                    $('select[name=DynamicField]').map(function () {
                        var data = {};
                        data.Case_ID = 1;
                        data.Case_Field_ID = parseInt($(this).attr('data-attr-id'));
                        if ($(this).val() == '')//only insert the fields having data
                        {
                            data.Field_Value = '';
                        }
                        else
                        {
                            data.Field_Value = $(this).find('option:selected').text();
                        }
                        data.Description = $(this).val();
                        if ( $(this).val()!='') {
                            lstData.push(data);
                        }
                    });
                    ajaxCall(url, {Case_ID: caseId,
                        Case_DateTime: casedate
                                        ,Case_Type_Id: CaseType
                                        ,Summary: Summary
                                        ,Description: Description
                                        ,Case_Registeration_Type_Id: RegType
                                        , RefAgency: RefAgency
                                        , Tags:Tags
                                        ,CaseDynamicData: lstData
                    }, function (resp) {
                        if (typeof (resp) === "object" && resp != null) {
                            if (resp.IsSuccess) {
                                alert("Success");
                               location.reload();
                            }
                            else {
                                alert('@LHRLA.Core.Helpers.CustomMessages.GenericErrorMessage');
                            }
                        }
                    }, function (fail) {
                        alert("Failure");
                    }, function (err) {
                        alert("Error");
                    });
                }
                else
                {
                   
                }
                    //console.log(JSON.stringify(lstData));
                
            });
        });
</script>       
    }
     <!--------->
   
<div class="row">
    <div class="col-md-12">
        <div class="m-portlet m-portlet--tab">
            <div class="m-portlet__head">
                <div class="m-portlet__head-caption">
                    <div class="m-portlet__head-title">
                        <span class="m-portlet__head-icon m--hide">
                            <i class="la la-gear"></i>
                        </span>
                        <h3 class="m-portlet__head-text">
                            Details
                        </h3>
                    </div>
                </div>
            </div>
            <!--begin::Form-->
            <form class="m-form m-form--fit m-form--label-align-right" name="FormUpdate" id="FormUpdate">
                <div class="m-portlet__body">
                    @Html.HiddenFor(model => model.ID, new { @class = "form-control", @id = "SubTypeID" })
                    @Html.HiddenFor(model => model.Case_Sub_Type_ID, new { @class = "form-control", @id = "CaseSubTypeHdn" })
                    <div class="m-form__section m-form__section--first">
                        <div class="form-group m-form__group row">
                            <label class="col-lg-2 col-form-label">
                                Case Date:
                            </label>
                            <div class="col-lg-3">
                                <div class="input-group date">
                                    <input type="text" class="form-control m-input" readonly="" placeholder="Select date" id="m_datepicker_2" name="CaseDate"
                                           value="@(CaseStaticData.Case_DateTime == null ? string.Empty : CaseStaticData.Case_DateTime.Value.ToString("MM/dd/yyyy"))" />
                                    <div class="input-group-append">
                                        <span class="input-group-text">
                                            <i class="la la-calendar-check-o"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-lg-2 col-form-label">
                                Summary:
                            </label>
                            <div class="col-lg-8">
                                <input type="text" class="form-control m-input" placeholder="Summary" id="txtSummary" value="@CaseStaticData.Summary" name="Summary" />
                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-lg-2 col-form-label">
                                Description:
                            </label>
                            <div class="col-lg-8">
                                <textarea type="text" class="form-control m-input" placeholder="Description" rows="5" id="txtDescription" name="Description">@CaseStaticData.Description</textarea>
                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-lg-2 col-form-label">
                                Case Category
                            </label>
                            <div class="col-lg-3">
                                @Html.DropDownListFor(x => x.tbl_Case_Sub_Types.ID, new SelectList(ViewBag.List != null ? ViewBag.List : CaseStaticData.SubTypeId.ToString(), "ID", "Type", CaseStaticData.SubTypeId.ToString()), "Select Case Category", new { @class = "form-control", @id = "cmbSubCategory" })
                                @Html.ValidationMessageFor(model => model.tbl_Case_Sub_Types.ID, "", new { @class = "text-danger" })


                            </div>
                            <label class="col-lg-2 col-form-label">
                                Case Type
                            </label>
                            <div class="col-lg-3">
                                @Html.DropDownListFor(m => m.ID, new SelectList(ViewBag.CaseMainTypeList != null ? ViewBag.CaseMainTypeList : CaseStaticData.Case_Type_Id.ToString(), "ID", "Type", CaseStaticData.Case_Type_Id.ToString()), "Select Case Type", new { @class = "form-control", @id = "cmbCaseType" })
                                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })


                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-lg-2 col-form-label">
                                Case Registration By
                            </label>
                            <div class="col-lg-3">
                                <select class="form-control m-select2" name="RegsType" id="cmbRegType">
                                    @foreach (var item in (ViewBag.RegisterationType))
                                    {
                                        <option value="@item.ID" @(item.ID == CaseStaticData.Case_Registeration_Type_Id ? "selected" : String.Empty)>@item.Type</option>
                                    }

                                </select>
                            </div>
                            <label class="col-lg-2 col-form-label">
                                Current Status
                            </label>
                            <div class="col-lg-3">
                                @CaseStaticData.Status
                            </div>
                        </div>
                        <div class="form-group m-form__group row">
                            <label class="col-lg-2 col-form-label">
                                Referral Agency
                            </label>
                            <div class="col-lg-3">
                                <select class="form-control m-select2" name="param" multiple="multiple" id="cmbRefAgency">
                                    @foreach (var item in (ViewBag.RefAgency))
                                    {
                                        <option value="@item.ID" @(CaseReferrals.Where(a => a.Case_ID == CaseStaticData.ID).Any(n => n.Agency_ID == item.ID) ? "selected" : String.Empty)>@item.Name</option>
                                    }
                                </select>
                            </div>
                            <label class="col-lg-2 col-form-label">
                                Add Tag
                            </label>
                            <div class="col-lg-3">
                                <select class="form-control m-select2" name="param" multiple="multiple" id="cmbTags">
                                    @foreach (var item in (ViewBag.Tags))
                                    {
                                        <option value="@item.ID" @(CaseTags.Where(a => a.Case_ID == CaseStaticData.ID).Any(n => n.Tag_ID == item.ID) ? "selected" : String.Empty)>@item.Tag_Value</option>
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="form-group m-form__group row">
                            <label class="col-lg-2 col-form-label">
                                Followup Date:
                            </label>
                            <div class="col-lg-3">
                                <div class="input-group date">
                                    <input type="text" class="form-control m-input" readonly="" disabled="disabled" placeholder="Select date" id="m_datepicker_1"
                                           value="@(CaseStaticData.Followup_Date == null ? string.Empty : CaseStaticData.Followup_Date.Value.ToString("MM/dd/yyyy"))">
                                    <div class="input-group-append">
                                        <span class="input-group-text">
                                            <i class="la la-calendar-check-o"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="m-form__seperator m-form__seperator--dashed"></div>

                    <!--for sections-->
                    @for (int i = 0; i < SectionCount; i++)
                    {
                        <div class="m-form__section m-form__section--last">

                            <div class="col-md-12 pt-4">
                                <div class="m-form__heading">
                                    <h3 class="m-form__heading-title">
                                        @lstCaseFields.GroupBy(e => e.Case_Field_Section_ID).ToArray()[i].FirstOrDefault().SectionTitle
                                    </h3>
                                </div>
                                @foreach (var item in lstCaseFields.GroupBy(e => e.Case_Field_Section_ID).ToArray()[i])
                                {
                                    <div class="form-group m-form__group row">

                                        <label class="col-lg-2 col-form-label">
                                            @item.Name
                                        </label>
                                        <div class="col-lg-8">
                                            @if (item.Field_Type == "T")
                                            {

                                                <input type="text" class="form-control m-input" placeholder="Text" id="@item.ID"
                                                       name="DynamicField" data-attr-id="@item.ID"
                                                       value="@CaseDynamicData.Where(a=> a.Case_Field_ID==item.ID).Select(a=>a.Field_Value!=null?a.Field_Value:"").FirstOrDefault()" />

                                            }
                                            else
                                            {
                                                <select class="form-control m-select2" name="DynamicField" id="@item.ID" data-attr-id="@item.ID">
                                                    <option value="">--Select1--</option>
                                                    @foreach (var options in FieldOptions.Where(a => a.Case_Field_ID == item.ID))
                                                    {
                                                        <option value="@options.ID" @(options.Name == CaseDynamicData.Where(a => a.Case_Field_ID == item.ID).Select(a => a.Field_Value != null ? a.Field_Value : "").FirstOrDefault() ? "selected" : String.Empty)>@options.Name</option>
                                                    }
                                                </select>
                                            }

                                        </div>

                                    </div>
                                }
                            </div>
                        </div>

                    }
                    @*}*@


                </div>
                <div class="m-portlet__foot m-portlet__foot--fit">
                    <div class="m-form__actions  m--align-right">
                        <button type="submit" class="btn btn-primary" id="btnSave">
                            Save
                        </button>
                        <button type="reset" class="btn btn-secondary">
                            Cancel
                        </button>
                    </div>
                </div>
            </form>

            <!--end::Form-->
        </div>
    </div>
   </div>
    
    

