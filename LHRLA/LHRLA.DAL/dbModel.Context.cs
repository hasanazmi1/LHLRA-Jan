//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LHRLA.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class vt_LHRLAEntities : DbContext
    {
        public vt_LHRLAEntities()
            : base("name=vt_LHRLAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Branch> tbl_Branch { get; set; }
        public virtual DbSet<tbl_Call_Operators> tbl_Call_Operators { get; set; }
        public virtual DbSet<tbl_Calls> tbl_Calls { get; set; }
        public virtual DbSet<tbl_Case> tbl_Case { get; set; }
        public virtual DbSet<tbl_Case_Data> tbl_Case_Data { get; set; }
        public virtual DbSet<tbl_Case_Data_temp> tbl_Case_Data_temp { get; set; }
        public virtual DbSet<tbl_Case_Fields> tbl_Case_Fields { get; set; }
        public virtual DbSet<tbl_Case_Fields_Options> tbl_Case_Fields_Options { get; set; }
        public virtual DbSet<tbl_Case_Fields_Section> tbl_Case_Fields_Section { get; set; }
        public virtual DbSet<tbl_Case_History_Log> tbl_Case_History_Log { get; set; }
        public virtual DbSet<tbl_Case_Referral> tbl_Case_Referral { get; set; }
        public virtual DbSet<tbl_Case_Registeration_Types> tbl_Case_Registeration_Types { get; set; }
        public virtual DbSet<tbl_Case_Status> tbl_Case_Status { get; set; }
        public virtual DbSet<tbl_Case_Sub_Types> tbl_Case_Sub_Types { get; set; }
        public virtual DbSet<tbl_Case_Tags> tbl_Case_Tags { get; set; }
        public virtual DbSet<tbl_case_temp> tbl_case_temp { get; set; }
        public virtual DbSet<tbl_Case_Types> tbl_Case_Types { get; set; }
        public virtual DbSet<tbl_City> tbl_City { get; set; }
        public virtual DbSet<tbl_Councelling_Sessions> tbl_Councelling_Sessions { get; set; }
        public virtual DbSet<tbl_Email_Setup> tbl_Email_Setup { get; set; }
        public virtual DbSet<tbl_Email_Users> tbl_Email_Users { get; set; }
        public virtual DbSet<tbl_Meetings> tbl_Meetings { get; set; }
        public virtual DbSet<tbl_Pages> tbl_Pages { get; set; }
        public virtual DbSet<tbl_Referral_Agency> tbl_Referral_Agency { get; set; }
        public virtual DbSet<tbl_Role> tbl_Role { get; set; }
        public virtual DbSet<tbl_Role_Pages> tbl_Role_Pages { get; set; }
        public virtual DbSet<tbl_Section> tbl_Section { get; set; }
        public virtual DbSet<tbl_Tags_Setup> tbl_Tags_Setup { get; set; }
        public virtual DbSet<tbl_User> tbl_User { get; set; }
        public virtual DbSet<tbl_User_Branch> tbl_User_Branch { get; set; }
        public virtual DbSet<tbl_UserLog> tbl_UserLog { get; set; }
    
        public virtual int sp_AddUserLog(string eventName, string entityName, Nullable<long> entityID, Nullable<int> userId, string description)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            var entityNameParameter = entityName != null ?
                new ObjectParameter("EntityName", entityName) :
                new ObjectParameter("EntityName", typeof(string));
    
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddUserLog", eventNameParameter, entityNameParameter, entityIDParameter, userIdParameter, descriptionParameter);
        }
    }
}
